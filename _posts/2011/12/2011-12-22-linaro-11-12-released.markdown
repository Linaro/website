---
author: david.zinman
categories:
- blog
date: 2011-12-22 19:52:48
description: Links to all the downloads for the Linaro 11.12 release
layout: post
link: /blog/releases-blog/linaro-11-12-released/
slug: linaro-11-12-released
tags:
- Releases
title: Linaro 11.12 Released
wordpress_id: 1113
---

"We are what we repeatedly do. Excellence, therefore, is not an act but a habit." ~Aristotle

Linaro is pleased to announce the release of Linaro 11.12, a continuance of Linaro releases delivered on a monthly cadence. The Linaro 11.12 release is also the last release for 2011 calender year and continues to deliver excellence and quality that members can expect to throughout 2012.

This release includes components delivered by all Linaro Teams: Working Groups, Landing Teams and Platform Teams. This effort brings an abundance of exciting updates and new features, integrated on top of Android and Ubuntu.

Now available with this release are the Linaro Android builds of Ice Cream Sandwich (ICS) supporting accelerated graphics on two of its member's low cost development boards; the Samsung Origen board and the ST-Ericsson Snowball board. The accelerated graphics on both the Samsung Origen board and the ST-Ericsson Snowball board that are now available are based on chips incorporating a dual-core Arm Cortex-A9 processor and an Arm Mali-400 graphics processor: Samsung's Exynos 4210 and ST-Ericsson's NovaThor9500.

[/news/accelerated-builds-android-ice-cream-sandwich-now-available-linaro-member-boards/](/news/accelerated-builds-android-ice-cream-sandwich-now-available-linaro-member-boards/)

In addition to Snowball from ST-Ericsson, Origen from Samsung and PandaBoard from TI, Linaro's Android Team and its Freescale Landing Team have set the groundwork for bringing acceleration to the i.MX53 by stabilizing and improving ICS on the Quick Start board.

Available Video Demonstrations include:

Snowball dev board running Linaro's build of Android ICS with hardware acceleration:
[http://www.youtube.com/watch?v=XPFy2MFbUys&amp;feature=youtu.be](http://www.youtube.com/watch?v=XPFy2MFbUys&amp;feature=youtu.be)

Samsung's Mali accelerated Origen dev board running Linaro's build of Android ICS
[http://www.youtube.com/watch?v=whpaltVa3pQ&amp;feature=youtu.be](http://www.youtube.com/watch?v=whpaltVa3pQ&amp;feature=youtu.be)

Samsung's Mali accelerated Origen dev board running Linaro's build of Android ICS (with 3D demo)
[http://www.youtube.com/watch?v=7_MCLKmXDFA&amp;feature=youtu.be](http://www.youtube.com/watch?v=7_MCLKmXDFA&amp;feature=youtu.be)

In addition to these highlights and improvements delivered by Linaro engineers, the following updates and features are also available:

The Android Team continues to focus on Ice Cream Sandwich (ICS) and delivers Linaro Android ICS built with the Linaro toolchain and running on all our supported hardware. Other enhancements for ICS are DS-5 with Gator and libjpeg-turbo support. Development of AOSP continues with a Linaro AOSP master build now available.

The Development Platform Team delivers high quality improvements and features which consist of the linux-linaro and lt-panda kernel packages, now automatically generated by the CI build scripts. Other achievements from this team include: UCM support is enabled in PulseAudio, integrated in our images and works out of the box on i.MX53/PandaBoard boards. The preview images for Ubuntu 12.04, Precise Pangolin are available and include nano, developer, server, alip (Xfce desktop based), and ubuntu-desktop. The Ubuntu LEB now includes debug packages (ddeb) for all Linaro-specific packages, which can be
downloaded from the Linaro Overlay PPA.

The Multimedia Team updates introduce the realvideo codec implementation in libav, with NEON optimisations and Speex for Android which includes the NEON optimisation patches. The team also addsupdates to the pulseaudio ucm branch, alsa-lib ucm patches and includes alsa-ucm-pa tests to verify that the pulseaudio ucm works as expected. Additionally, the Multimedia Team also announces a prototype application for unattended end-to-end testing of the audio stack for Ubuntu which works for Intel/Ubuntu and are available from:
[https://git.linaro.org/people/benjamin.gaignard/e2eaudiotest.git](https://git.linaro.org/people/benjamin.gaignard/e2eaudiotest.git). Memory management updates include the development of dri2proto, updates to libdri2 which support dri2video and dri2video test app, updates to mesa and implementation of the core functionality in xserver against xf86-video-nouveau and xf86-video-omap. Trace events and debugfs support for CMA and made CMA testing available for Snowball boards in LAVA are also found in this release. The multimedia contributed code for memory management are also available (as
topic branches) from git:// [git.linaro.org/people/jessebarker/linaro-mm-sig/linux.git]()

The Infrastructure Team is supporting the ongoing effort for Linaro as a whole. The reworking of the Linaro roadmap under [https://status.linaro.org/11.12/roadmap-2011Q4.html ](/about/)now includes artistic graphs that visualize work items progress for roadmap
goals. The Linaro build services can contain vendor-provided binary overlays for hardware acceleration and are published in a way which requires click through license acceptance before being downloaded. Click through license acceptance has also been added to Android builds which use source overlays from [snapshots.linaro.org](http://snapshots.linaro.org/).

The Toolchain Working Group (WG) efforts this cycle show that the Linaro GCC now includes support for 64 bit sync primitives, unaligned block moves on Armv7, and backports the Cortex-A15 pipeline description from the ongoing upstream A15 work. Improvements to the vectorizer include updates to the straight line vectorizer, including supporting operations with an arbitrary number of operands, vectorizing conditions, and improved pattern recognition support. Additionally, GDB now supports single stepping over atomic operations
and QEMU has been rebased on the new upstream 1.0 release.

The Validation Team lands the support of Samsung Origen boards on LAVA. The boards are now available to run daily tests. In addition, the i.MX53 Quick Start support improvements include the ability to deploy Android images and run the Kernel CI testing. To streamline the deployment of LAVA and allow for a more continuous testing and flexible deployment process, a new tool is introduced: lava-deployment-tool.

The Graphics Team accomplishments in this release are numerous and include the implementation of a GLMark2 benchmark for performing bilinear filtering manually in shaders that are used to smooth textures when displayed larger or smaller than their actual size. Other accomplishments include added support for glproxy in glcompbench which allows choosing the backend (OpenGL or OpenGL ES2) at runtime instead of building a different executable for each, EGL virtualization support to glproxy, enabling it to virtualize EGL as it does GLX, so applications can decide on using one or the other at run-time,
depending on availability. GLCompbench now shares some neat GLMark2 objects for managing GLSL (and GLSL ES) shader source prior to compilation and linking. These inclusions can be seen as a preprocessor for the strings read out of the files on disk and allow for dynamic generation of precision declarations, constants, and other symbols (or even whole sections of code) at either global or local scope. Objects shared from GLMark2 include: Util, ShaderSource, and the CompositeTestBase update to use ShaderSource. Also
updated shaders to useShaderSource, and derived GL-based test classes to configure shaders. Additionally the Team enabled apitrace, which provides a tracer and retracer executable, to work on systems having only EGL/GLES2 libraries.

The Power Management Team pushed a number of items upstream. Items include: common clock patches v4 which includes support for OMAP4, version 2 of common Arm and i.MX cpuidle driver, a patch for non ACPI based generic processor cooling devices, and a patch for a new trip type needed for cooling devices like cpufreq. The Team also integrated sched_mc for Arm into Linaro Kernel, and for thermal management tested that temperature is reduced in production using the current solution on Origen board.

Full details of this release, including detailed release highlights and known issues, can be found on the release pages of our Wiki. [http://wiki.linaro.org/Cycles/1112/Release](http://wiki.linaro.org/Cycles/1112/Release)

We encourage everybody to use the 11.12 release. The download links for all images and components are available on our downloads page:[ /downloads/](/downloads/)

See the detailed highlights of this release to get an overview of what has been accomplished by the Working Groups, Landing Teams and Platform Teams.

The release details are linked from the “Details” column for each released artifact on the release information:

[http://wiki.linaro.org/Cycles/1112/Release#Release_Information](http://wiki.linaro.org/Cycles/1112/Release#Release_Information)


## Using the Android-based images


The Android-based images come in three parts: system, userdata and boot. These need to be combined to form a complete Android install. For an explanation of how to do this please see:

[http://wiki.linaro.org/Platform/Android/ImageInstallation](http://wiki.linaro.org/Platform/Android/ImageInstallation)

If you are interested in getting the source and building these images yourself please see the following pages:

[http://wiki.linaro.org/Platform/Android/GetSource](http://wiki.linaro.org/Platform/Android/GetSource)
[http://wiki.linaro.org/Platform/Android/BuildSource](http://wiki.linaro.org/Platform/Android/BuildSource)


## Using the Ubuntu-based images


The Ubuntu-based images consist of two parts. The first part is a hardware pack, which can be found under the hwpacks directory and contains hardware specific packages (such as the kernel and bootloader). The second part is the rootfs, which is combined with the hardware pack to create a complete image. For more information on how to create an image please see:

[http://wiki.linaro.org/Platform/DevPlatform/Ubuntu/ImageInstallation](http://wiki.linaro.org/Platform/DevPlatform/Ubuntu/ImageInstallation)


## Getting involved


More information on Linaro can be found on our websites:

Homepage: [](../../)
Wiki: [http://wiki.linaro.org](http://wiki.linaro.org/)

Also subscribe to the important Linaro mailing lists and join our IRC channels to stay on top of Linaro developments.

Announcements:
[http://lists.linaro.org/mailman/listinfo/linaro-announce](http://lists.linaro.org/mailman/listinfo/linaro-announce)

Development:
[http://lists.linaro.org/mailman/listinfo/linaro-dev](http://lists.linaro.org/mailman/listinfo/linaro-dev)

IRC:
#linaro on [irc.linaro.org](http://irc.linaro.org/) or [irc.freenode.net](http://freenode.net/)
#linaro-android [irc.linaro.org](http://irc.linaro.org/) or [irc.freenode.net](http://freenode.net/)


## Known issues with this release


For any errata issues, please see:

[http://wiki.linaro.org/Cycles/1112/Release#Known_Issues](http://wiki.linaro.org/Cycles/1112/Release#Known_Issues)

Bug reports for this release should be filed in Launchpad against the individual packages that are affected. If a suitable package cannot be identified, feel free to assign them to:

[http://www.launchpad.net/linaro](http://www.launchpad.net/linaro)